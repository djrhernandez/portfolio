{"version":3,"sources":["components/header/header.js","components/about/about.js","components/resume/resume.js","components/projects/projects.js","components/contact/contact.js","components/footer/footer.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["Component","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","today","Date","date","concat","getMonth","getDate","getFullYear","state","react_default","a","createElement","className","src","logo","alt","href","target","rel","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"4NAEqBA,YCADA,YCACA,YCAEA,YCADA,YCADA,2BCmCNC,qBAzBd,SAAAA,IAAc,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GACbC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,OAEA,IAAII,EAAQ,IAAIC,KACZC,EAAI,GAAAC,OAAMH,EAAMI,WAAW,EAAvB,KAAAD,OAA4BH,EAAMK,UAAlC,KAAAF,OAA+CH,EAAMM,cAArD,KAJK,OAMbb,EAAKc,MAAQ,CACZL,KAAMA,GAPMT,wEAYP,OACIe,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACvBH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cACFH,EAAAC,EAAAC,cAAA,OAAKE,IAAKC,IAAMF,UAAU,WAAWG,IAAI,SACzCN,EAAAC,EAAAC,cAAA,kBAASF,EAAAC,EAAAC,cAAA,0BAAT,yBACAF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAWI,KAAK,sBAAsBC,OAAO,SAASC,IAAI,uBAAvE,wBAlBF1B,cCCE2B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOhB,EAAAC,EAAAC,cAACe,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,kCEnInBC,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.54d5db0d.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Header extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<header id=\"home\">\r\n\r\n\t\t\t\t</header>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n\r\n\r\n}\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\n\r\nclass About extends Component {\r\n\tconstructor(props) {\r\n\r\n\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<div className=\"aboutme\">\r\n\t\t\t\t<p>About ME</p>\r\n\t\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n\r\n\r\n}\r\nexport default About;\r\n","import React, { Component } from 'react';\r\n\r\nclass Resume extends Component {\r\n\tconstructor(props) {\r\n\r\n\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<div className=\"resume\">\r\n\t\t\t\t<p>Resume Div</p>\r\n\t\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n\r\n\r\n}\r\nexport default Resume;\r\n","import React, { Component } from 'react';\r\n\r\nclass Projects extends Component {\r\n\tconstructor(props) {\r\n\r\n\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<div className=\"projects\">\r\n\t\t\t\t<p>Projects Div</p>\r\n\t\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n\r\n\r\n}\r\nexport default Projects;\r\n","import React, { Component } from 'react';\r\n\r\nclass Contact extends Component {\r\n\tconstructor(props) {\r\n\r\n\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<div className=\"contact\">\r\n\t\t\t\t<p>Contact Me</p>\r\n\t\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n\r\n\r\n}\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\n\r\nclass Footer extends Component {\r\n\tconstructor(props) {\r\n\r\n\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<footer className=\"footy\">\r\n\t\t\t\t<p>Footer Div</p>\r\n\t\t\t\t</footer>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n\r\n\r\n}\r\nexport default Footer;\r\n","import React, { Component } from 'react';\nimport Header from './components/header/header';\nimport About from './components/about/about';\nimport Resume from './components/resume/resume';\nimport Projects from './components/projects/projects';\nimport Contact from './components/contact/contact';\nimport Footer from './components/footer/footer';\n\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tvar today = new Date();\n\t\tvar date = `${today.getMonth()+1}/${today.getDate()}/${today.getFullYear()}}`;\n\n\t\tthis.state = {\n\t\t\tdate: date\n\t\t}\n\t}\n\n    render() {\n        return (\n            <div className=\"App\">\n\t\t\t\t<header className=\"App-header\">\n                    <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                    <p> Edit <code>src/App.js</code> and save to reload. </p>\n                    <a className=\"App-link\" href=\"https://reactjs.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n                        Learn React\n                    </a>\n                </header>\n            </div>\n        );\n    }\n}\nexport default App;\n/*\n<div className=\"App\">\n\t<Header>\n\t<About>\n\t<Resume>\n\t<Projects>\n\t<Contact>\n\t<Footer>\n</div>\n\n*/\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}